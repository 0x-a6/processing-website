{
  "brief": "Helper class for a list of Strings.",
  "methods": [
    {
      "anchor": "StringList_size_",
      "name": "size()",
      "desc": "Get the length of the list"
    },
    {
      "anchor": "StringList_clear_",
      "name": "clear()",
      "desc": "Remove all entries from the list"
    },
    {
      "anchor": "StringList_get_",
      "name": "get()",
      "desc": "Get an entry at a particular index"
    },
    {
      "anchor": "StringList_set_",
      "name": "set()",
      "desc": "Set an entry at a particular index"
    },
    {
      "anchor": "StringList_remove_",
      "name": "remove()",
      "desc": "Remove an element from the specified index"
    },
    {
      "anchor": "StringList_append_",
      "name": "append()",
      "desc": "Add a new entry to the list"
    },
    {
      "anchor": "StringList_hasValue_",
      "name": "hasValue()",
      "desc": "Check if a value is a part of the list"
    },
    {
      "anchor": "StringList_sort_",
      "name": "sort()",
      "desc": "Sorts the array in place"
    },
    {
      "anchor": "StringList_sortReverse_",
      "name": "sortReverse()",
      "desc": "A sort in reverse"
    },
    {
      "anchor": "StringList_reverse_",
      "name": "reverse()",
      "desc": "Reverse the order of the list"
    },
    {
      "anchor": "StringList_shuffle_",
      "name": "shuffle()",
      "desc": "Randomize the order of the list elements"
    },
    {
      "anchor": "StringList_lower_",
      "name": "lower()",
      "desc": "Make the entire list lower case"
    },
    {
      "anchor": "StringList_upper_",
      "name": "upper()",
      "desc": "Make the entire list upper case"
    },
    {
      "anchor": "StringList_array_",
      "name": "array()",
      "desc": "Create a new array with a copy of all the values"
    }
  ],
  "csspath": "../../",
  "isLibrary": "true",
  "classFields": [],
  "description": "Helper class for a list of Strings. Lists are designed to have some of the\n features of ArrayLists, but to maintain the simplicity and efficiency of\n working with arrays.\n\n Functions like sort() and shuffle() always act on the list itself. To get\n a sorted copy, use list.copy().sort().",
  "type": "class",
  "constructors": ["StringList("],
  "related": ["IntList", "FloatList"],
  "name": "StringList",
  "classanchor": "StringList",
  "category": "data",
  "subcategory": "composite",
  "parameters": []
}
