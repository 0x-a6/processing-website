{"name":">> (right shift)","brief":"Shifts bits to the right","description":"Shifts bits to the right. The number to the left of the operator is shifted the number of places specified by the number to the right. Each shift to the right halves the number, therefore each right shift divides the original number by 2. Use the right shift for fast divisions or to extract an individual number from a packed number. Right shifting only works with integers or numbers which automatically convert to an integer such at byte and char.\n<br /> <br />\nBit shifting is helpful when using the <b>color</b> data type. A right shift can extract red, green, blue, and alpha values from a color. A left shift can be used to quickly reassemble a color value (more quickly than the <b>color()</b> function).\n","related":[],"syntax":["value >> n"],"returns":"","type":"function","category":"math","subcategory":"Bitwise Operators","parameters":[{"name":"value","description":"int: the value to shift","type":[]},{"name":"n","description":"int: the number of places to shift right","type":[]}]}