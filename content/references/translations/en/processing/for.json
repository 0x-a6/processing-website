{"name":"for","brief":"Controls a sequence of repetitions","description":"Controls a sequence of repetitions. A basic <b>for</b> structure has three parts: <b>init</b>, <b>test</b>, and <b>update</b>. Each part must be separated by a semicolon (;). The loop continues until the <b>test</b> evaluates to <b>false</b>. When a <b>for</b> structure is executed, the following sequence of events occurs:<br />\n<br />\n1. The init statement is run.<br />\n2. The test is evaluated to be true or false.<br />\n3. If the test is <em>true</em>, jump to step 4. If the test is <em>false</em>, jump to step 6.<br />\n4. Run the statements within the block.<br />\n5. Run the update statement and jump to step 2.<br />\n6. Exit the loop.<br />\n<br />\nIn the first example above, the <b>for</b> structure is executed 40 times. In the init statement, the value <em>i</em> is created and set to zero. <em>i</em> is less than 40, so the test evaluates as <em>true</em>. At the end of each loop, <em>i</em> is incremented by one. On the 41st execution, the test is evaluated as <em>false</em>, because <em>i</em> is then equal to 40, so <em>i &lt; 40</em> is no longer true. Thus, the loop exits.<br />\n<br />\nA second type of <b>for</b> structure makes it easier to iterate over each element of an array. The last example above shows how it works. Within the parentheses, first define the datatype of the array, then define a variable name. This variable name will be assigned to each element of the array in turn as the <b>for</b> moves through the entire array. Finally, after the colon, define the array name to be used. \n","related":[],"syntax":["for (init; test; update) { ","  statements","} ","","for (datatype element : array) { ","  statements","}"],"returns":"","type":"function","category":"Control","subcategory":"Iteration","parameters":[{"name":"init","description":"statement executed once when beginning loop","type":[]},{"name":"test","description":"if the test evaluates to <em>true</em>, the statements execute","type":[]},{"name":"update","description":"executes at the end of each iteration","type":[]},{"name":"statements","description":"collection of statements executed each time through the loop","type":[]},{"name":"datatype","description":"datatype of elements in the array","type":[]},{"name":"element","description":"temporary name to use for each element of the array","type":[]},{"name":"array","description":"name of the array to iterate through","type":[]}]}