{
  "brief": "Evaluates the curve at point t for points a, b, c, d",
  "related": [
    "PGraphics_curve_",
    "PGraphics_curveVertex_",
    "PGraphics_bezierPoint_"
  ],
  "name": "curvePoint()",
  "description": "Evaluates the curve at point <b>t</b> for points <b>a</b>, <b>b</b>,\n <b>c</b>, <b>d</b>. The parameter <b>t</b> may range from 0 (the start of the\n curve) and 1 (the end of the curve). <b>a</b> and <b>d</b> are the control\n points, and <b>b</b> and <b>c</b> are points on the curve. As seen in the\n example above, this can be used once with the <b>x</b> coordinates and a\n second time with the <b>y</b> coordinates to get the location of a curve at\n <b>t</b>.",
  "syntax": ["graphics.curvePoint(a, b, c, d, t)"],
  "returns": "float",
  "type": "method",
  "category": "shape",
  "subcategory": "curves",
  "classanchor": "PGraphics",
  "parameters": [
    {
      "name": "graphics",
      "description": " any object of the type PGraphics",
      "type": ["PGraphics"]
    },
    {
      "name": "a",
      "description": "coordinate of first control point",
      "type": ["float"]
    },
    {
      "name": "b",
      "description": "coordinate of first point on the curve",
      "type": ["float"]
    },
    {
      "name": "c",
      "description": "coordinate of second point on the curve",
      "type": ["float"]
    },
    {
      "name": "d",
      "description": "coordinate of second control point",
      "type": ["float"]
    },
    { "name": "t", "description": "value between 0 and 1", "type": ["float"] }
  ]
}
