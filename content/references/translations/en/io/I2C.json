{
  "brief": "Opens an I2C interface as master",
  "methods": [
    {
      "anchor": "I2C_beginTransmission_",
      "name": "beginTransmission()",
      "desc": "Begins a transmission to an attached device"
    },
    {
      "anchor": "I2C_close_",
      "name": "close()",
      "desc": "Closes the I2C device."
    },
    {
      "anchor": "I2C_endTransmission_",
      "name": "endTransmission()",
      "desc": "Ends the current transmissions."
    },
    {
      "anchor": "I2C_list_",
      "name": "list()",
      "desc": "Lists all available I2C interfaces"
    },
    {
      "anchor": "I2C_read_",
      "name": "read()",
      "desc": "Read bytes from the attached device."
    },
    {
      "anchor": "I2C_write_",
      "name": "write()",
      "desc": "Add bytes to be written to the device."
    }
  ],
  "csspath": "../../",
  "isLibrary": "true",
  "classFields": [],
  "description": "Opens an I2C interface as master.<br/>\n <br/>\n I2C is a serial bus, commonly used to attach peripheral ICs (Integrated\n Circuits) to processors and microcontrollers. It uses two pins, SDA (for\n data) and SDL (for the clock signal). Multiple \"slave\" devices can be\n connected to the same bus, as long as they are responding to different\n addresses (see below).<br/>\n <br/>\n The I2C \"master\" device initiates a transmission, which includes sending the\n address of the desired \"slave\" device. I2C addresses consist of 7 bits plus\n one bit that indicates whether the device is being read from or written to.\n Some datasheets list the address in an 8 bit form (7 address bits + R/W bit),\n while others provide the address in a 7 bit form, with the address in the\n lower 7 bits.<br/>\n <br/>\n This library expects addresses in their 7 bit form, similar to Arduino's Wire\n library, and what is being output by the i2cdetect utility on Linux. If the\n address provided in a datasheet is greater than 127 (hex 0x7f) or there are\n separate addresses for read and write operations listed, which vary exactly\n by one, then you want to shift the this number by one bit to the right before\n passing it as an argument to\n <a href=\"I2C_beginTransmission_.html\">beginTransmission()</a>.",
  "type": "class",
  "constructors": ["I2C(dev)"],
  "related": [],
  "name": "I2C",
  "classanchor": "io/I2C",
  "category": "I2C",
  "subcategory": "",
  "parameters": [
    { "name": "dev", "description": "interface name", "type": ["String"] }
  ]
}
