{
  "brief": "Opens an RC servo motor connected to a GPIO pin",
  "methods": [
    {
      "anchor": "SoftwareServo_attach_",
      "name": "attach()",
      "desc": "Attaches a servo motor to a GPIO pin"
    },
    {
      "anchor": "SoftwareServo_attach_",
      "name": "attach()",
      "desc": "Attaches a servo motor to a GPIO pin<br/>\n <br/>\n You must call this function before calling write(). Note that the servo motor\n will only be instructed to move after the first time write() is called.<br/>\n <br/>\n The optional parameters minPulse and maxPulse control the minimum and maximum\n pulse width durations. The default values, identical to those of Arduino's\n Servo class, should be compatible with most servo motors."
    },
    {
      "anchor": "SoftwareServo_write_",
      "name": "write()",
      "desc": "Moves a servo motor to a given orientation"
    },
    {
      "anchor": "SoftwareServo_attached_",
      "name": "attached()",
      "desc": "Returns whether a servo motor is attached to a pin"
    },
    {
      "anchor": "SoftwareServo_detach_",
      "name": "detach()",
      "desc": "Detatches a servo motor from a GPIO pin"
    }
  ],
  "csspath": "../../",
  "isLibrary": "true",
  "classFields": [],
  "description": "Opens an RC servo motor connected to a GPIO pin<br/>\n </br>\n This library uses timers to control RC servo motors by means of pulse width\n modulation (PWM). While not as accurate as dedicated PWM hardware, it has\n shown to be sufficient for many applications.<br/>\n <br/>\n Connect the signal wire (typically colored yellow) to any available GPIO pin\n and control the servo's angle as shown in the example sketch.",
  "type": "class",
  "constructors": ["SoftwareServo(parent)"],
  "related": [],
  "name": "SoftwareServo",
  "classanchor": "io/SoftwareServo",
  "category": "software_servo",
  "subcategory": "",
  "parameters": [
    {
      "name": "parent",
      "description": "typically use \"this\"",
      "type": ["PApplet"]
    }
  ]
}
