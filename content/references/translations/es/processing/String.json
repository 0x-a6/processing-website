{
  "name": "String",
  "brief": "A string is a sequence of characters",
  "description": "A string is a sequence of characters. The class <b>String</b> includes methods for examining individual characters, comparing strings, searching strings, extracting parts of strings, and for converting an entire string uppercase and lowercase. Strings are always defined inside double quotes (<b>\"Abc\"</b>), and characters are always defined inside single quotes (<b>'A'</b>).<br />\n<br />\nTo compare the contents of two Strings, use the <b>equals()</b> method, as in <b>if (a.equals(b))</b>, instead of <b>if (a == b)</b>. A String is an Object, so comparing them with the <b>==</b> operator only compares whether both Strings are stored in the same memory location. Using the <b>equals()</b> method will ensure that the actual contents are compared. (The <a href=\"https://github.com/processing/processing/wiki/Troubleshooting#why-dont-these-strings-equal\">troubleshooting</a> reference has a longer explanation.)<br /> \n<br />\nBecause a String is defined between double quotation marks, to include such marks within the String itself you must use the <b>&#92;</b> (backslash) character.  (See the third example above.)  This is known as an <em>escape sequence</em>. Other escape sequences include <b>&#92;t</b> for the tab character and <b>&#92;n</b> for new line. Because backslash is the escape character, to include a single backslash within a String, you must use two consecutive backslashes, as in: <b>&#92;&#92;</b><br />\n<br />\nThere are more string methods than those linked from this page. Additional documentation is located online in the <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">official Java documentation</a>.\n",
  "related": ["char", "text_"],
  "constructors": ["String(data)", "String(data, offset, length)"],
  "methods": [
    {
      "anchor": "String_toUpperCase_",
      "name": "toUpperCase()",
      "desc": "Converts all of the characters in the string to uppercase"
    },
    {
      "anchor": "String_toLowerCase_",
      "name": "toLowerCase()",
      "desc": "Converts all of the characters in the string to lowercase"
    },
    {
      "anchor": "String_substring_",
      "name": "substring()",
      "desc": "Returns a new string that is a part of the original string"
    },
    {
      "anchor": "String_length_",
      "name": "length()",
      "desc": "Returns the total number of characters included in the <b>String</b> as an integer number"
    },
    {
      "anchor": "String_indexOf_",
      "name": "indexOf()",
      "desc": "Returns the index value of the first occurrence of a substring within the input string"
    },
    {
      "anchor": "String_charAt_",
      "name": "charAt()",
      "desc": "Compares two strings to see if they are the same"
    },
    {
      "anchor": "String_length_",
      "name": "length()",
      "desc": "Returns the character at the specified index"
    }
  ],
  "returns": "",
  "type": "class",
  "category": "Data",
  "subcategory": "Composite",
  "parameters": [
    {
      "name": "data",
      "description": "byte[] or char[]: either an array of bytes to be decoded into characters, or an array of characters to be combined into a string",
      "type": []
    },
    {
      "name": "offset",
      "description": "int: index of the first character",
      "type": []
    },
    {
      "name": "length",
      "description": "int: number of characters",
      "type": []
    }
  ]
}
