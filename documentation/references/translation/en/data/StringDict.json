{"constructors":["StringDict(","StringDict(pairs)","StringDict(row)"],"classname":"StringDict","examples":"","related":["libraries/data/IntDict.html","libraries/data/FloatDict.html"],"methods":[{"name":"size()","desc":"Returns the number of key/value pairs"},{"name":"clear()","desc":"Remove all entries"},{"name":"keyArray()","desc":"Return a copy of the internal keys array"},{"name":"values()","desc":"Return the internal array being used to store the values"},{"name":"valueArray()","desc":"Create a new array and copy each of the values into it"},{"name":"get()","desc":"Return a value for the specified key"},{"name":"set()","desc":"Create a new key/value pair or change the value of one"},{"name":"hasKey()","desc":"Check if a key is a part of the data structure"},{"name":"remove()","desc":"Remove a key/value pair"},{"name":"sortKeys()","desc":"Sort the keys alphabetically"},{"name":"sortKeysReverse()","desc":"Sort the keys alphabetically in reverse"},{"name":"sortValues()","desc":"Sort by values in ascending order"},{"name":"sortValuesReverse()","desc":"Sort by values in descending order"}],"csspath":"../../","isLibrary":"true","classFields":[],"description":"A simple table class to use a String as a lookup for another String value.","classanchor":"libraries/data/StringDict.html","parameters":[]}