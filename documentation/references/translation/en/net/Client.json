{"constructors":["Client(parent, host, port)","Client(parent, socket)"],"classname":"Client","examples":"","related":[],"methods":[{"name":"stop()","desc":"Disconnects from the server"},{"name":"active()","desc":"Returns true if this client is still active"},{"name":"ip()","desc":"Returns the IP address of the machine as a String"},{"name":"available()","desc":"Returns the number of bytes in the buffer waiting to be read"},{"name":"clear()","desc":"Clears the buffer"},{"name":"read()","desc":"Returns a value from the buffer"},{"name":"readChar()","desc":"Returns the next byte in the buffer as a char"},{"name":"readBytes()","desc":"Reads everything in the buffer"},{"name":"readBytesUntil()","desc":"Reads from the buffer of bytes up to and including a particular character"},{"name":"readString()","desc":"Returns the buffer as a String"},{"name":"readStringUntil()","desc":"Returns the buffer as a String up to and including a particular character"},{"name":"write()","desc":"Writes bytes, chars, ints, bytes[], Strings"}],"csspath":"../../","isLibrary":"true","classFields":[],"description":"( begin auto-generated from Client.xml )\n \n A client connects to a server and sends data back and forth. If anything \n goes wrong with the connection, for example the host is not there or is \n listening on a different port, an exception is thrown.\n \n ( end auto-generated )","classanchor":"libraries/net/Client.html","parameters":[{"name":"parent","description":"typically use \"this\"","type":["PApplet"]},{"name":"host","description":"address of the server","type":["String"]},{"name":"port","description":"port to read/write from on the server","type":["int"]},{"name":"socket","description":"any object of type Socket","type":["Socket"]}]}